@using Maxim.Model.BaseModel
@model MadeInFiberModel
@{
    ViewBag.Title = "AddMadeInFiber";
    Layout = null;
}
<link href="~/Content/css/WashingSelect.css" rel="stylesheet" />

<script type="text/javascript">

    if (navigator.appName == "Microsoft Internet Explorer") {
        window.history.forward(1);
    }
    else // if it is Mozilla than
    {
        window.history.forward(-1);
    }

    function funcAddorUpdateTableFiberComp() {
        if (IsEditAFiber == "1") {
            if (theEditSeqID != "") {
                funcUpdateTableFiberValue(theEditSeqID);
            }
        }
        else {
            funcAddlineFiberComp();
        }
    }

    function funcAddlineFiberComp() {
        SelectCategory = $("#SelectCategory option:selected").val()
        FiberPerent = $("#ComPercent ").val();
        SelectComposition = $("#SelectComposition option:selected").val();

        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        if (FiberPerent == "" || FiberPerent == "0") {
            //alert("The Number of composition is incorrect");
            $("#labtxt").html("The Number of composition is incorrect");
            showDiv();
            return false;
        }
        if (SelectComposition == "") {
            //alert("Please select composition");
            $("#labtxt").html("Please select composition");
            showDiv();
            return false;
        }

        if (SelectCategory == "") {
            //Null Category 的情况， 判断 选择的成分是否和 列表中 Null Category 的成分有重复。
            //只有从来没有加过成分，第一次加空 Category 成分，才是真的要添加空 Category 成分。
            //检查是否第一次加，或 当前只有空Category。
            var _isRealAddNULLtype = "true";
            var _lastType = "";
            if (objlineFiberBody.childElementCount > 0) {
                for (var i = objlineFiberBody.childElementCount - 1; i >= 0 ; i--) {
                    var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                    if (tTyp != "") {
                        _lastType = tTyp;
                        _isRealAddNULLtype = "false";
                        break;
                    }
                }
            }

            if (_isRealAddNULLtype == "true") {
                var _hasRepeat = 0;
                for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
                    var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                    if (tTyp == "") {
                        var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
                        if (SelectComposition == tFiber) {
                            _hasRepeat = 1;
                        }
                    }
                }
                if (_hasRepeat == 1) {
                    if ($("#hfCulture").val() == "en") {
                        $("#labtxt").html("The components has already added under the empy category.");
                    }
                    else {
                        $("#labtxt").html("空Category的该成份已添加.");
                    }
                    showDiv();
                    return;
                }
            }
            else {
                SelectCategory = _lastType
                var _hasRepeat = 0;
                for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
                    var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                    var tFiberPercent = objlineFiberBody.children[i].children[0].children[2].value;
                    if (SelectCategory == tTyp) {
                        var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
                        if (SelectComposition == tFiber) {
                            _hasRepeat = 1;
                        }
                    }
                }
                if (_hasRepeat) {
                    $("#labtxt").html("Under the same category, components cannot be the same,the category:[" + SelectCategory + "].(同一类别下，成份不能相同，类别为：[" + SelectCategory + "])");
                    showDiv();
                    return;
                }
            }
        }
        else {
            //当前有选 Category 的情况， 判断 选择的成分是否和 列表中 对应 Category 的成分有重复。
            var _hasRepeat = 0;
            for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
                var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                var tFiberPercent = objlineFiberBody.children[i].children[0].children[2].value;
                if (SelectCategory == tTyp) {
                    var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
                    if (SelectComposition == tFiber) {
                        _hasRepeat = 1;
                    }
                }
            }
            if (_hasRepeat) {
                //alert("Under the same category, components cannot be the same,the category:[" + SelectCategory + "].(同一类别下，成份不能相同，类别为：[" + SelectCategory + "])");
                if ($("#hfCulture").val() == "en") {
                    $("#labtxt").html("Under the same category, components cannot be the same,the category:[" + SelectCategory + "].");
                }
                else {
                    $("#labtxt").html("(同一类别下，成份不能相同，类别为：[" + SelectCategory + "])");
                }
                showDiv();
                return;
            }

            //如果换了Category， 则检查之前的所有 Category 的 百分比 和是不是100 的倍数。
            if (objlineFiberBody.childElementCount > 0) {

                var tPrevTyp = objlineFiberBody.children[objlineFiberBody.childElementCount - 1].children[0].children[1].value;
                if (tPrevTyp != SelectCategory) {
                    var _allCatePercent = 0 * 1;
                    for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
                        var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                        var tFiberPercent = objlineFiberBody.children[i].children[0].children[2].value;
                        if (tPrevTyp == tTyp) {
                            _allCatePercent += tFiberPercent * 1;
                        }
                    }
                    if (_allCatePercent % 100 != 0) {
                        if ($("#hfCulture").val() == "en") {
                            $("#labtxt").html("Before add a different category, the previous category[" + tPrevTyp + "] total composition shall be multiples of 100%.");
                        }
                        else {
                            $("#labtxt").html("(在添加新类别前，前一个类别[" + tPrevTyp + "]下的所有成份百分比和必须是100%的倍数)");
                        }
                        showDiv();
                        return;
                    }
                }
            }
        }



        var sTrHtml = "";
        var ID = objlineFiberBody.childElementCount + 1;
        //检查当前 Category 以前是否加过，若加过，则不要显示 Category。
        var _isShowCategor = "true";
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
            if (SelectCategory == tTyp) {
                _isShowCategor = "false";
            }
        }

        sTrHtml += "<tr>";
        sTrHtml += "<td>";
        sTrHtml += "<label id='lblFiber' name ='lblFiber' >" + ID + "</label>";
        //sTrHtml += "<input id='hflineID' name ='hflineID' type='hidden' value='" + ID + "' >";
        sTrHtml += "<input id='hflineType' name ='hflineType' type='hidden' value='" + SelectCategory + "' >";
        sTrHtml += "<input id='hflinePercent' name ='hflinePercent' type='hidden' value='" + FiberPerent + "' >";
        sTrHtml += "<input id='hflineFiber' name ='hflineFiber' type='hidden' value='" + SelectComposition + "' >";
        sTrHtml += "</td>";
        if (_isShowCategor == "true") {
            sTrHtml += "<td>" + SelectCategory + "</td>";
        }
        else {
            sTrHtml += "<td>" + "</td>";
        }

        sTrHtml += "<td>" + FiberPerent + "</td>";
        sTrHtml += "<td>" + SelectComposition + "</td>";
        sTrHtml += "<td>";
        sTrHtml += "<button type='button' id='btnDelFiderLine' class='btn btn-default' style='margin-top: 0px;border: 1px solid #D6D6D6;' value='" + ID + "' onclick='return funcDelFiderLine(this);' >Del</button>";
        sTrHtml += "<button type='button' id='btnEditFiderLine' class='btn btn-default' style='margin-left: 10px;margin-top: 0px;border: 1px solid #D6D6D6;' value='" + ID + "' onclick='return funcEditFiderLine(this);' >Edit</button>";
        sTrHtml += "</td>";
        sTrHtml += "</tr>";
        $("#Items").removeAttr("style");
        $("#LineFiberComposition tbody").append(sTrHtml);

        $("#SelectCategory").val("");
        $("#ComPercent ").val("");
        $("#SelectComposition").val("");
    }

    function funcUpdateTableFiberValue(theID) {
        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        SelectCategory = $("#SelectCategory option:selected").val()
        FiberPerent = $("#ComPercent ").val();
        SelectComposition = $("#SelectComposition option:selected").val();

        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        if (FiberPerent == "" || FiberPerent == "0") {
            $("#labtxt").html("The Number of composition is incorrect");
            showDiv();
            return false;
        }
        if (SelectComposition == "") {
            $("#labtxt").html("Please select composition");
            showDiv();
            return false;
        }

        var _hasRepeat = 0;
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            var tID = objlineFiberBody.children[i].children[0].children[0].innerText;
            if (tID != theID) {
                var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
                var tFiberPercent = objlineFiberBody.children[i].children[0].children[2].value;
                if (SelectCategory == tTyp) {
                    var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
                    if (SelectComposition == tFiber) {
                        _hasRepeat = 1;
                    }
                }
            }
        }
        if (_hasRepeat) {
            $("#labtxt").html("Under the same category, components cannot be the same,the category:[" + SelectCategory + "].(同一类别下，成份不能相同，类别为：[" + SelectCategory + "])");
            showDiv();
            return;
        }

        //将选择 类别  百分比 成分 更新到列表中的那一行。
        objlineFiberBody.children[theID - 1].children[0].children[1].value = SelectCategory;
        objlineFiberBody.children[theID - 1].children[0].children[2].value = FiberPerent;
        objlineFiberBody.children[theID - 1].children[0].children[3].value = SelectComposition;
        if (objlineFiberBody.children[theID - 1].children[1].innerText != "") {
            objlineFiberBody.children[theID - 1].children[1].innerText = SelectCategory;
        }
        objlineFiberBody.children[theID - 1].children[2].innerText = FiberPerent;
        objlineFiberBody.children[theID - 1].children[3].innerText = SelectComposition;

        //启用所有按钮
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            objlineFiberBody.children[i].children[4].children[0].disabled = false;
            objlineFiberBody.children[i].children[4].children[1].disabled = false;
        }

        $("#SelectCategory")[0].disabled = false;
        $("#SelectCategory").val("");
        $("#ComPercent ").val("");
        $("#SelectComposition").val("");

        IsEditAFiber = "0";
        theEditSeqID = "";
    }

    function funcDelFiderLine(obj) {
        //alert(obj.value);
        var startSeq = obj.value - 1;

        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];
        var _isShowType = "false";
        if (objlineFiberBody.children[startSeq].children[1].innerText != "") {
            _isShowType = "true"; //删除的那行刚好是需要显示 Type 的那行。
        }

        $(obj).parent().parent().remove();

        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];
        for (var i = startSeq; i < objlineFiberBody.childElementCount; i++) {
            objlineFiberBody.children[i].children[0].children[0].innerText = i + 1; //改第一列的显示 ID
            objlineFiberBody.children[i].children[4].children[0].value = i + 1;     //改删除按钮 value ID
            objlineFiberBody.children[i].children[4].children[1].value = i + 1;     //改Edit按钮的 value ID
            if (_isShowType == "true") {
                objlineFiberBody.children[i].children[1].innerText = objlineFiberBody.children[i].children[0].children[1].value;
                _isShowType = "false";
            }
        }
    }

    var IsEditAFiber = "0";
    var theEditSeqID = "";

    function funcEditFiderLine(obj) {
        //alert(obj.value);
        IsEditAFiber = "1";
        theEditSeqID = obj.value;

        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        //取出编辑 的那一行的 id, type 百分比  成分。
        var theID = obj.value;
        var theType = objlineFiberBody.children[theID - 1].children[0].children[1].value;
        var thePercent = objlineFiberBody.children[theID - 1].children[0].children[2].value;
        var theFiber = objlineFiberBody.children[theID - 1].children[0].children[3].value;

        $("#SelectCategory").val(theType);
        $("#ComPercent ").val(thePercent);
        $("#SelectComposition").val(theFiber);

        //禁用所有按钮
        $("#SelectCategory")[0].disabled = true;
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            objlineFiberBody.children[i].children[4].children[0].disabled = true;
            objlineFiberBody.children[i].children[4].children[1].disabled = true;
        }
    }

    function funcNextToSelectCare() {
        SelectMadeIn = $("#SelectMadeIn option:selected").val();
        SelectPrintEXD = $("#SelectPrintEXD option:selected").val();

        // 1. 检查 madein
        if (SelectMadeIn == "") {
            //alert("Please select MadeIn");
            $("#labtxt").html("Please select MadeIn");
            showDiv();
            return false;
        }
        // 2. 检查 is print EXCLUSIVE
        if (SelectPrintEXD == "") {
            //alert("Please select Print EXCLUSIVE  OF DECORATION");
            $("#labtxt").html("Please select Print EXCLUSIVE  OF DECORATION");
            showDiv();
            return false;
        }

        //3. 检查空类别 和 非空的各个类别下的成分 百分比是否 为100
        var StrAllCategory = "";
        var HasNullCategory = 0;
        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];
        if (objlineFiberBody.childElementCount <= 0) {
            //alert("Please add fiber composition first(请先添加成分）")
            if ($("#hfCulture").val() == "en") {
                $("#labtxt").html("Please add fiber composition first.");
            }
            else {
                $("#labtxt").html("(请先添加成分）.");
            }
            showDiv();
            return;
        }


        //取得所有 Category集合
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            var tTyp = objlineFiberBody.children[i].children[0].children[1].value;
            if (tTyp == "") {
                HasNullCategory = 1;
            }
            else {
                if (StrAllCategory.indexOf(tTyp) < 0) {
                    if (StrAllCategory == "") {
                        StrAllCategory += tTyp;
                    }
                    else {
                        StrAllCategory += "^" + tTyp;
                    }
                }
            }
        }

        if (HasNullCategory == 1) {
            StrAllCategory += "^";
        }
        var lstCategory = StrAllCategory.split('^');
        for (var i = 0; i < lstCategory.length; i++) {
            //alert(lstCategory[i])
            var tTotalPercent = 0 * 1;
            for (var k = 0; k < objlineFiberBody.childElementCount; k++) {
                var tTyp = objlineFiberBody.children[k].children[0].children[1].value;
                if (lstCategory[i] == tTyp) {
                    var tFiberPercent = objlineFiberBody.children[k].children[0].children[2].value;
                    tTotalPercent += tFiberPercent * 1;
                }
            }
            if (tTotalPercent % 100 != 0) {
                //alert("Total composition shall be multiples of 100%.the category:[" + lstCategory[i] + "](成分的百分比总和必须是100%的倍数。类别为：[" + lstCategory[i] + "])")
                if ($("#hfCulture").val() == "en") {
                    $("#labtxt").html("Total composition shall be multiples of 100%.the category:[" + lstCategory[i] + "].");
                }
                else {
                    $("#labtxt").html("(成分的百分比总和必须是100%的倍数。类别为：[" + lstCategory[i] + "]).");
                }
                showDiv();
                return;
            }
        }

        //4. 调 Ajax 检查是否某个 Category 的 伴侣未添加。
        var _data = {
            pLstCategory: StrAllCategory
        };
        var urlPost = "/Carelable/CheckFiberCategoryNotAddParter";
        $.post(urlPost, _data, function (data, status) {
            if (data != "1") {
                //alert(data);
                $("#labtxt").html(data);
                showDiv();
                return;
            }
            else {
                if ($("#hfIsSamWashAllItem").val() == "yes" && $("#hfIsUpdAllItemWash").val() == "yes") {
                    funcJustSaveFiber();
                }
                else {

                    $("#step2").removeClass("red-em");
                    $("#step2").addClass("gray-em");
                    $("#step3").removeClass("gray-em");
                    $("#step3").addClass("red-em");
                    $("#step3").css("display", "block");
                    $("#divMadeInFiber").css("display", "none");
                    $("#divWashCare").slideDown();
                    //$("#SecondStep").attr("class", "span2");
                    $("#ThirdStep").attr("class", "span2 active");
                    $("#ProgressBar").css("width", "70%");
                }
            }
        });

    }

    //var sTrHtml_Wash = "";

    function funcAddCommCustUsedClick() {

        var selectCustID = $("#SelectCommCustUsed").val();

        if (selectCustID == "") {
            //alert("Please select one wash")
            $("#labtxt").html("Please select one WashGroup");
            showDiv();

            return false;
        }
        var urlPost = "/Carelable/GetWashInstrLineDataByCustGroupKey/" + selectCustID;
        $.post(urlPost, selectCustID, function (data, status) {
            $("#LineWashCare tbody").html("");

            var _tHtml = "";
            $.each(data, function (i, item) {
                _tHtml += "<tr>";
                _tHtml += " <td>" + item.WashCare + "</td>";

                _tHtml += " <td>";
                var _tLineData = item.WashType + "^" + item.WashCare;
                _tHtml += "<input id='hflineType' name ='hflineType' type='hidden' value='" + item.WashType + "' >";
                _tHtml += "<input id='hflineWash' name ='hflineWash' type='hidden' value='" + _tLineData + "' >";
                _tHtml += "<button type='button' id='btnDelWashCareLine' class='btn btn-default' style='border: 1px solid #D6D6D6;margin-top:0;' value='" + _tLineData + "' onclick='return funcDelWashCareLineClick(this);'>Del</button>";
                _tHtml += "</td>";
                _tHtml += "</tr>";
                $("#Item").removeAttr("style");
                $("#LineWashCare tbody").html(_tHtml);
            });

        });
    }

    function funcDelWashCareLineClick(obj) {

        //alert(obj.value);
        //alert(obj.parentElement.getElementById("hflineType"));

        $(obj).parent().parent().remove();
        tWashType = $(obj).siblings().eq(0).val().replace(" ", "");
        $("#" + tWashType + "").removeAttr("disabled");
        $("#dropdownMenu" + tWashType + "").removeAttr("disabled");
        $("#dropdownMenu" + tWashType + "").prop('selectedIndex', 0);
        $("#dropdownMenu" + tWashType + " .text").html("--Please Select--");
        //obj.parentElement.getElementById("imgBig");

    }

    function funcAddCareStr() {

        var WASHING = $("#WASHING option:selected").val();
        var BLEACHING = $("#BLEACHING option:selected").val();
        var TUMBLEDRY = $("#TUMBLEDRY option:selected").val();
        var HANGdry = $("#HANGdry option:selected").val();
        var WRINGING = $("#WRINGING option:selected").val();
        var DRYCLEANING = $("#DRYCLEANING option:selected").val();
        var IRONING = $("#IRONING option:selected").val();
        var MISC = $("#MISC option:selected").val();

        if (WASHING == "" && BLEACHING == "" && TUMBLEDRY == "" && HANGdry == "" && WRINGING == "" && DRYCLEANING == "" && IRONING == "" && MISC == "") {
            //alert("Please select one wash")
            $("#labtxt").html("Please select one wash");
            showDiv();
            return false;
        }

        selectWashList = new Array();
        selectWashList[0] = WASHING + '^' + "WASHING";
        selectWashList[1] = BLEACHING + '^' + "BLEACHING";
        selectWashList[2] = TUMBLEDRY + '^' + "TUMBLED RY";
        selectWashList[3] = HANGdry + '^' + "HANG dry";
        selectWashList[4] = WRINGING + '^' + "WRINGING";
        selectWashList[5] = DRYCLEANING + '^' + "DRY CLEANING";
        selectWashList[6] = IRONING + '^' + "IRONING";
        selectWashList[7] = MISC + '^' + "MISC";

        var _tHtml = "";

        for (var i = 0; i < selectWashList.length; i++) {


            var SelectWashIstr = selectWashList[i].split('^')[0];
            var tWashType = selectWashList[i].split('^')[1];
            var _tLineData = tWashType + "^" + SelectWashIstr;
            if (SelectWashIstr != "") {
                var ssss = "";
                var objlineWash = document.getElementById("LineWashCare");
                var objLineWashBody = objlineWash.children[1];
                //alert(objLineWashBody.getElementsByTagName("tr").length);
                if (objLineWashBody.getElementsByTagName("tr").length > 0) {

                    for (var j = 0; j < objLineWashBody.childElementCount; j++) {
                        var tWash = objLineWashBody.children[j].children[0].innerText;
                        var tType = objLineWashBody.children[j].children[1].children[0].value;
                        //alert(tWashType);
                        //alert(tType);
                        if (tWashType == tType) {
                            if (tWashType != "MISC") {
                                if ($("#hfCulture").val() == "en") {
                                    $("#labtxt").html("The same category there is only one, in addition to MISC category.");
                                }
                                else {
                                    $("#labtxt").html("(同等类别只能存在一个，除MISC类别!).");
                                }
                                showDiv();
                                return;
                            }
                        }
                        else {
                            ssss += tWash + ',';
                        }




                        if (SelectWashIstr == tWash) {
                            if ($("#hfCulture").val() == "en") {
                                $("#labtxt").html("Washing Instructions cannot be repeated.");
                            }
                            else {
                                $("#labtxt").html("(洗语不能重复).");
                            }
                            showDiv();
                            return;
                        }


                    }
                }

                _tHtml += "<tr>";
                _tHtml += " <td>" + SelectWashIstr + "</td>";
                _tHtml += " <td>";
                _tHtml += "<input id='hflineType' name ='hflineType' type='hidden' value='" + tWashType + "' >";
                _tHtml += "<input id='hflineData' name ='hflineType' type='hidden' value='" + _tLineData + "' >";
                _tHtml += "<button type='button' id='btnDelWashCareLine' class='btn btn-default' value='" + _tLineData + "' onclick='return funcDelWashCareLineClick(this);' style='border: 1px solid #D6D6D6;margin-top: 0;'>Del</button>";
                _tHtml += "</td>";
                _tHtml += "</tr>";


                if (tWashType.indexOf(" ") > 0) {
                    tWashType = tWashType.replace(" ", "")
                }

                $("#" + tWashType + "").prop('selectedIndex', 0);

                if (tWashType != "MISC") {
                    $("#" + tWashType + "").attr("disabled", "disabled");

                    $("#dropdownMenu" + tWashType + "").attr("disabled", "disabled");

                }
                else {
                    $("#dropdownMenu" + tWashType + "").prop('selectedIndex', 0);
                    $("#dropdownMenu" + tWashType + " .text").html("--Please Select--");
                }
                var bbbb = ssss.split(',');
                if (tWashType == "MISC") {
                    if ($.inArray(SelectWashIstr, bbbb) < 0) {
                        //alert("231231231");
                        break;
                    }
                }

            }
        }
        $("#Item").removeAttr("style");
        $("#LineWashCare tbody").append(_tHtml);
        return false;


        // var WashStr = "WASHING,BLEACHING,TUMBLEDRY,HANGdry,WRINGING,DRYCLEANING,IRONING,MISC";
        //var www = WashStr.split(',');
        //for (var i = 0; i <WashList.length; i++) {
        //    if(WashList[i])
        //}

        var tWashType = $("#hfCurrentWashType").val();




        ////判断1 如果 tWashType != MISC
        //if (tWashType != "MISC") {
        //    for (var i = 0; i < objLineWashBody.childElementCount; i++) {
        //        //var tWash = objLineWashBody.children[i].children[0].innerText;
        //        var tType = objLineWashBody.children[i].children[1].children[0].value;
        //        if (tWashType == tType) {
        //            //$("#labtxt").html("The same category there is only one, in addition to MISC category(同等类别只能存在一个，除MISC类别!)");
        //            //showDiv();
        //            //alert('The same category there is only one, in addition to MISC category(同等类别只能存在一个，除MISC类别!)')
        //            if ($("#hfCulture").val() == "en") {
        //                $("#labtxt").html("The same category there is only one, in addition to MISC category.");
        //            }
        //            else {
        //                $("#labtxt").html("(同等类别只能存在一个，除MISC类别!).");
        //            }
        //            showDiv();
        //            return;
        //        }
        //    }
        //}
        var objlineWash = document.getElementById("LineWashCare");
        var objLineWashBody = objlineWash.children[1];

        //判断2 如果 SelectWashIstr 已经存在，也报错
        //判断2 如果 SelectWashIstr 已经存在，也报错
        for (var i = 0; i < objLineWashBody.childElementCount; i++) {
            var tWash = objLineWashBody.children[i].children[0].innerText;
            //var tType = objLineWashBody.children[i].children[1].children[0].value;

        }

        //var _tHtml = "";
        //_tHtml += "<tr>";
        //_tHtml += " <td>" + SelectWashIstr + "</td>";

        //_tHtml += " <td>";
        //var _tLineData = tWashType + "^" + SelectWashIstr;
        //_tHtml += "<input id='hflineType' name ='hflineType' type='hidden' value='" + tWashType + "' >";
        //_tHtml += "<input id='hflineData' name ='hflineType' type='hidden' value='" + _tLineData + "' >";
        //_tHtml += "<button type='button' id='btnDelWashCareLine' class='btn btn-default' value='" + _tLineData + "' onclick='return funcDelWashCareLineClick(this);'>Del</button>";
        //_tHtml += "</td>";
        //_tHtml += "</tr>";

        //$("#Item").removeAttr("style");
        //$("#LineWashCare tbody").append(_tHtml);

    }

    function funcWashClick(obj) {
        var id = obj.getAttribute("id");
        var values = $("." + id + "").val();
        $("#hfWashCode").val(values);
        console.log(id);
        console.log(values);
        console.log($("#hfWashCode").val());
    }

    function funcJustSaveFiber() {
        //取得 已选择的 成分集合
        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        var _strFiberAll = "";
        if (objlineFiberBody.childElementCount <= 0) {
            //alert("Please add Fiber Composition(成分未添加)");
            if ($("#hfCulture").val() == "en") {
                $("#labtxt").html("Please add Fiber Composition.");
            }
            else {
                $("#labtxt").html("(成分未添加).");
            }
            showDiv();
            return;
        }
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            //var tTypeandWash = objlineFiberBody.children[i].children[4].children[0].value;
            var tID = objlineFiberBody.children[i].children[0].children[0].innerText;
            var tCategory = objlineFiberBody.children[i].children[0].children[1].value;
            var tComPercent = objlineFiberBody.children[i].children[0].children[2].value;
            var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
            var _tCombine = tID + "^" + tCategory + "^" + tComPercent + "^" + tFiber
            if (_strFiberAll == "") {
                _strFiberAll += _tCombine;
            }
            else {
                _strFiberAll += "ˇ" + _tCombine;
            }
        }

        //alert(_strFiberAll)


        //这是第二次理新部分 成分的操作，不需要取得洗语集合
        var _strWashAll = "";

        //alert(_strWashAll)

        //return;

        var ParaStr = {
            pTempOrderID: $("#hfTempOrderID").val(),
            pSelectedIDs: $("#hfSelectedItemIDs").val(),
            pSelectedMadeIn: $("#SelectMadeIn option:selected").val(),
            pSelectedPrintExc: $("#SelectPrintEXD option:selected").val(),
            pSelectedFibers: _strFiberAll,
            pSelectedWashs: _strWashAll
        };

        //var urlPost = "/Carelable/SaveFiberAndCarer/" + $("#hfTempOrderID").val();
        var urlPost = "/Carelable/SaveFiberAndCarer/";
        $.post(urlPost, ParaStr, function (data, status) {
            var sTrHtml = "";

            if (data.HasError) {
                $("#labtxt").html(data.ErrMsg);
                showDiv();
                return;
            }

            $.each(data.OrderListDetail, function (i, item) {
                sTrHtml += "<tr>";

                sTrHtml += "<th class='center'>" + item.VENDOR_ORDER_NO + "</th>";
                sTrHtml += "<th class='center'>" + item.ORDER_NO + "</th>";
                sTrHtml += "<th class='center'>" + item.SUPPLIER + "</th>";
                sTrHtml += "<th class='center'>" + item.SUP_NAME + "</th>";
                sTrHtml += "<th class='center'>" + item.STYLE + "</th>";
                sTrHtml += "<th class='center'>" + item.ITEM_DESCRIPTION + "</th>";
                sTrHtml += "<th class='center'>" + item.SIZE + "</th>";

                sTrHtml += "<th class='center'>" + item.SKU_CODE + "</th>";
                sTrHtml += "<th class='center'>" + item.EAN_CODE + "</th>";
                sTrHtml += "<th class='center'>" + item.QTY_ORDERED + "</th>";

                sTrHtml += "<th class='center'>" + item.CountryOfOrigin + "</th>";
                sTrHtml += "<th class='center'>" + item.category1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre1 + "</th>";
                sTrHtml += "<th class='center'>" + item.category2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre2 + "</th>";

                sTrHtml += "<th class='center'>" + item.category3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre3 + "</th>";

                sTrHtml += "<th class='center'>" + item.category4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre4 + "</th>";

                sTrHtml += "<th class='center'>" + item.category5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre5 + "</th>";
                sTrHtml += "<th class='center'>" + item.category6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre6 + "</th>";

                sTrHtml += "<th class='center'>" + item.category7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre7 + "</th>";

                sTrHtml += "<th class='center'>" + item.category8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre8 + "</th>";

                sTrHtml += "<th class='center'>" + item.category9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre9 + "</th>";

                sTrHtml += "<th class='center'>" + item.category10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre10 + "</th>";

                sTrHtml += "<th class='center'>" + item.Washcare1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Symblos + "</th>";
                sTrHtml += "</tr>";

            });
            $("#OrderListDetail tbody").html(sTrHtml);

            //document.location.href = '/Carelable/OrderUploadCarelable/'+$("#hfTempOrderID").val();
            $("#EditFiberCareInstr").css("display", "none");
            funcBackFromFiberSave($("#hfSelectedItemIDs").val());

        });
    }

    function funcSaveFiberAndCare() {

        //取得 已选择的 成分集合
        var objlineFiber = document.getElementById("LineFiberComposition");
        var objlineFiberBody = objlineFiber.children[1];

        var _strFiberAll = "";
        if (objlineFiberBody.childElementCount <= 0) {
            //alert("Please add Fiber Composition(成分未添加)");
            if ($("#hfCulture").val() == "en") {
                $("#labtxt").html("Please add Fiber Composition.");
            }
            else {
                $("#labtxt").html("(成分未添加).");
            }
            showDiv();
            return;
        }
        for (var i = 0; i < objlineFiberBody.childElementCount; i++) {
            //var tTypeandWash = objlineFiberBody.children[i].children[4].children[0].value;
            var tID = objlineFiberBody.children[i].children[0].children[0].innerText;
            var tCategory = objlineFiberBody.children[i].children[0].children[1].value;
            var tComPercent = objlineFiberBody.children[i].children[0].children[2].value;
            var tFiber = objlineFiberBody.children[i].children[0].children[3].value;
            var _tCombine = tID + "^" + tCategory + "^" + tComPercent + "^" + tFiber
            if (_strFiberAll == "") {
                _strFiberAll += _tCombine;
            }
            else {
                _strFiberAll += "ˇ" + _tCombine;
            }
        }

        //alert(_strFiberAll)


        //取得 已选择的 洗语集合
        var objlineWash = document.getElementById("LineWashCare");
        var objLineWashBody = objlineWash.children[1];

        var _strWashAll = "";
        if (objLineWashBody.childElementCount <= 0) {
            //alert("Please add Care Instructions(洗语未添加)");
            if ($("#hfCulture").val() == "en") {
                $("#labtxt").html("Please add Washing Instructions.");
            }
            else {
                $("#labtxt").html("(洗语未添加).");
            }
            showDiv();
            return;
        }
        for (var i = 0; i < objLineWashBody.childElementCount; i++) {
            var tTypeandWash = objLineWashBody.children[i].children[1].children[1].value;
            if (_strWashAll == "") {
                _strWashAll += tTypeandWash;
            }
            else {
                _strWashAll += "ˇ" + tTypeandWash;
            }
        }

        //alert(_strWashAll)

        //return;
        if ($("#LineWashCare tr").length >= 12) {
            $("#labtxt").html("The number of washing instruction cannot exceed ten.");
            showDiv();
            return false;
        }
        var ParaStr = {
            pTempOrderID: $("#hfTempOrderID").val(),
            pSelectedIDs: $("#hfSelectedItemIDs").val(),
            pSelectedMadeIn: $("#SelectMadeIn option:selected").val(),
            pSelectedPrintExc: $("#SelectPrintEXD option:selected").val(),
            pSelectedFibers: _strFiberAll,
            pSelectedWashs: _strWashAll
        };

        //var urlPost = "/Carelable/SaveFiberAndCarer/" + $("#hfTempOrderID").val();
        var urlPost = "/Carelable/SaveFiberAndCarer/";
        $.post(urlPost, ParaStr, function (data, status) {
            var sTrHtml = "";

            if (data.HasError) {
                $("#labtxt").html(data.ErrMsg);

                showDiv();
                return;
            }

            $.each(data.OrderListDetail, function (i, item) {
                sTrHtml += "<tr>";


                sTrHtml += "<th class='center'>" + item.VENDOR_ORDER_NO + "</th>";
                sTrHtml += "<th class='center'>" + item.ORDER_NO + "</th>";
                sTrHtml += "<th class='center'>" + item.SUPPLIER + "</th>";
                sTrHtml += "<th class='center'>" + item.SUP_NAME + "</th>";
                sTrHtml += "<th class='center'>" + item.STYLE + "</th>";
                sTrHtml += "<th class='center'>" + item.ITEM_DESCRIPTION + "</th>";
                sTrHtml += "<th class='center'>" + item.SIZE + "</th>";

                sTrHtml += "<th class='center'>" + item.SKU_CODE + "</th>";
                sTrHtml += "<th class='center'>" + item.EAN_CODE + "</th>";
                sTrHtml += "<th class='center' style='text-align: right;'>" + item.QTY_ORDERED + "</th>";

                sTrHtml += "<th class='center'>" + item.CountryOfOrigin + "</th>";
                sTrHtml += "<th class='center'>" + item.category1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre1 + "</th>";
                sTrHtml += "<th class='center'>" + item.category2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre2 + "</th>";

                sTrHtml += "<th class='center'>" + item.category3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre3 + "</th>";

                sTrHtml += "<th class='center'>" + item.category4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre4 + "</th>";

                sTrHtml += "<th class='center'>" + item.category5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre5 + "</th>";
                sTrHtml += "<th class='center'>" + item.category6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre6 + "</th>";

                sTrHtml += "<th class='center'>" + item.category7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre7 + "</th>";

                sTrHtml += "<th class='center'>" + item.category8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre8 + "</th>";

                sTrHtml += "<th class='center'>" + item.category9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre9 + "</th>";

                sTrHtml += "<th class='center'>" + item.category10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Comp10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Fibre10 + "</th>";

                sTrHtml += "<th class='center'>" + item.Washcare1 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare2 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare3 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare4 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare5 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare6 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare7 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare8 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare9 + "</th>";
                sTrHtml += "<th class='center'>" + item.Washcare10 + "</th>";
                sTrHtml += "<th class='center'>" + item.Symblos + "</th>";
                sTrHtml += "</tr>";

            });
            $("#OrderListDetail tbody").html(sTrHtml);

            //document.location.href = '/Carelable/OrderUploadCarelable/'+$("#hfTempOrderID").val();
            $("#EditFiberCareInstr").css("display", "none");
            funcBackFromFiberSave($("#hfSelectedItemIDs").val());

        });

    }

    function funcBackToUpload() {
        $("#step1").removeClass("gray-em");
        $("#step1").addClass("red-em");
        $("#step2").css("display", "none");
        $("#step2").removeClass("red-em");
        $("#step2").addClass("gray-em");
        $("#step3").css("display", "none");
        $("#step3").removeClass("red-em");
        $("#step3").addClass("gray-em");
        $("#Body_header").slideDown();
        $("#divWashCare").css("display", "none");
        $("#EditFiberCareInstr").css("display", "none");
        //funcBackFromFiberSave($("#hfSelectedItemIDs").val());
        $("#tab1").attr("class", "tab-pane active");
        $("#tab2").attr("class", "tab-pane");
        $("#FirstStep").attr("class", "span2 active");
        $("#SecondStep").attr("class", "span2");
        $("#ProgressBar").css("width", "25%");
    }

    function funcBackToShowFiber() {
        $("#step2").removeClass("gray-em");
        $("#step2").addClass("red-em");
        $("#step3").css("display", "none");
        $("#step3").removeClass("red-em");
        $("#step3").addClass("gray-em");
        $("#divMadeInFiber").slideDown();
        $("#divWashCare").css("display", "none");
        $("#SecondStep").attr("class", "span2 active");
        $("#ThirdStep").attr("class", "span2");
        $("#ProgressBar").css("width", "50%");
    }

</script>
<script type="text/javascript">
    if (typeof jQuery === 'undefined') {
        throw new Error('Bootstrap\'s JavaScript requires jQuery')
    }

    function createDropdown(ele) {
        if (!ele || !ele.nodeName || ele.nodeName != "SELECT") return;
        var id = 'dropdownMenu' + ele.id;
        var li = '';
        for (var i = 0; i < ele.options.length; i++) {
            li += '<li role="presentation">'
        + '<a role="menuitem" tabindex="-1">'
        + ele.options[i].text
        + '</a>'
        + '</li>';
        }

        var drop = '<div id="dropdown_show" class="dropdown">'
        + '<button type="button" class="btn dropdown-toggle" id="' + id + '" data-toggle="dropdown" onclick="funcWashClick(this)" style="background: #eaeaea;margin-top:0;">'
        + '<span class="text">' + ele.options[ele.selectedIndex].text + '</span>'
        + '</button>'
        + '<ul class="dropdown-menu" role="menu" aria-labelledby="' + id + '">'
        + li
        + '</ul>'
        + '</div>';

        var dropdownEle = $(drop);
        $(ele).after(dropdownEle).hide();
        return dropdownEle[0];
    }

    function syncDropdown(selectEle, dropdownEle) {
        if (!selectEle || !selectEle.nodeName || selectEle.nodeName != "SELECT") return;
        if (!dropdownEle || !dropdownEle.nodeName || dropdownEle.nodeName != "DIV") return;

        var showtext = $(dropdownEle).find(".text");
        var lis = $(dropdownEle).find("ul > li");


        lis.each(function (index, domEle) {
            $(domEle).click(function () {
                selectEle.selectedIndex = index;
                showtext.text($(domEle).text());
            }).mouseover(function () {
                var washcode = eval(document.getElementById("hfWashCode").value);
                if (washcode[index].length != 0) {
                    //var offset = $(domEle).offset();
                    //var left = offset.left + 'px';
                    //var top = offset.top + 'px';
                    $("#divWashImage").show().find("img").attr('src', '../../images/proImages/Landmark/' + washcode[index] + '.jpg');
                }
                console.log('show: ' + washcode[index]);
            }).mouseout(function () {
                $("#divWashImage").hide();
            }).mousemove(function (e) {
                $("#divWashImage").css({ 'top': e.pageY + 15, 'left': e.pageX + 10 });
            });
        });
    }

    $(function () {
        $('.selectpicker').each(function () {
            syncDropdown(this, createDropdown(this));
        });
    });


    //bootstrap end
</script>

<input id="hfCulture" name="hfCulture" type="hidden" value='@Model.Language'>
<input id="hf_Notes" name="hf_Notes" type="hidden" value="">
<input id="hf_EditID" name="hf_EditID" type="hidden" value="">
<input id="hfTempOrderID" name="hfTempOrderID" type="hidden" value='@Model.TempOrderId'>
<input id="hfSelectedItemIDs" name="hfSelectedItemIDs" type="hidden" value='@Model.SelectItemIDs'>
<input id="hfIsSamWashAllItem" name="hfIsSamWashAllItem" type="hidden" value='@Model.IsSameWashForAllLine'>
<input id="hfIsUpdAllItemWash" name="hfIsUpdAllItemWash" type="hidden" value='@Model.IsUpdAllLineWash'>
<input class="dropdownMenuWASHING" name="dropdownMenuWASHING" type="hidden" value='@Model.DefaultDropWashCodew'>
<input class="dropdownMenuBLEACHING" name="dropdownMenuBLEACHING" type="hidden" value='@Model.DefaultDropWashCodeB'>
<input class="dropdownMenuTUMBLEDRY" name="dropdownMenuTUMBLEDRY" type="hidden" value='@Model.DefaultDropWashCodeT'>
<input class="dropdownMenuHANGdry" name="dropdownMenuHANGdry" type="hidden" value='@Model.DefaultDropWashCodeH'>
<input class="dropdownMenuWRINGING" name="dropdownMenuWRINGING" type="hidden" value='@Model.DefaultDropWashCodeW'>
<input class="dropdownMenuDRYCLEANING" name="dropdownMenuDRYCLEANING" type="hidden" value='@Model.DefaultDropWashCodeD'>
<input class="dropdownMenuIRONING" name="dropdownMenuIRONING" type="hidden" value='@Model.DefaultDropWashCodeI'>
<input class="dropdownMenuMISC" name="dropdownMenuMISC" type="hidden" value='@Model.DefaultDropWashCodeM'>

<input id="hfWashCode" name="hfWashCode" type="hidden" value="">

<div id="divWashImage" style="display:none;position:absolute;z-index:1001"><img src="#" alt="" style="height:35px;" /></div>
<div id="divMadeInFiber">
    <h3 class="block" style="text-align:center;">Add Fiber Info</h3>
    <div class="row-fluid">
        <div class="span2 span2_hide">

            <div class="control-group">

                <label class="control-label" for="firstName"></label>

                <div class="controls">
                </div>

            </div>

        </div>
        <div class="span4 ">

            <div class="control-group">

                <label class="control-label" for="firstName">Made In:</label>

                <div class="controls">

                    <select class="m-wrap span8" id="SelectMadeIn" name="SelectMadeIn">
                        @foreach (var item in Model.MadeInList)
                        {
                            <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                        }
                    </select>



                </div>

            </div>

        </div>
        <div class="span4 ">

            <div class="control-group">

                <label class="control-label" for="lastName">Print "EXCLUSIVE  OF DECORATION" :</label>

                <div class="controls">
                    <select class="m-wrap span8" id="SelectPrintEXD" name="SelectPrintEXD">
                        <option value=''>--Please select--</option>
                        <option value='1'>Yes</option>
                        <option value='2'>No</option>

                    </select>


                </div>

            </div>

        </div>
    </div>
    <div class="row-fluid">
        <div class="span2 span2_hide">

            <div class="control-group">

                <label class="control-label" for="firstName"></label>

                <div class="controls">
                </div>

            </div>

        </div>
        <div class="span4 ">

            <div class="control-group">

                <label class="control-label" for="firstName">Category:</label>

                <div class="controls">

                    <select class="m-wrap span8" id="SelectCategory" name="SelectCategory">
                        @foreach (var item in Model.FiberCateList)
                        {
                            <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                        }
                    </select>



                </div>

            </div>

        </div>
        <div class="span4 ">

            <div class="control-group">

                <label class="control-label" for="lastName">Fiber:</label>

                <div class="controls">
                    <input id='ComPercent' name='ComPercent' value="" type="text" class="m-wrap span2" />%
                    <select id="SelectComposition" name="SelectComposition" class="m-wrap span4">
                        @foreach (var item in Model.FiberCompList)
                        {
                            <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                        }

                    </select>
                    <button type="button" id="btnAdd" class="btn" value="Add" style="border: 1px solid #D6D6D6;margin-top: -13px;" onclick="return funcAddorUpdateTableFiberComp();">Add</button>

                </div>

            </div>

        </div>

    </div>
    @*Table*@
    <div class="portlet-body" id="Items">
        <div id="Gridview" class="dataTables_wrapper form-inline" role="grid">
            <table class="table table-striped table-bordered table-hover table-full-width dataTable" id="LineFiberComposition" aria-describedby="sample_2_info">
                <thead>
                    <tr class="head">
                        <th class="center">ID</th>
                        <th class="center">Category</th>
                        <th class="center">%</th>
                        <th class="center">Fiber</th>
                        <th class="center"></th>
                    </tr>
                </thead>
                <tbody role="alert" aria-live="polite" aria-relevant="all"></tbody>
            </table>

            <div class="row-fluid">
                <div class="span4">


                </div>
                <div class="span4">

                </div>
                <div class="span4">

                </div>
            </div>
        </div>
        <div class="row-fluid">

            <div class="span4">

            </div>

            <div class="span4">
                <button type="button" id="btnNextToCare" class="btn" value="Next" style="border: 1px solid #D6D6D6;" onclick="return funcNextToSelectCare();">Next</button>

                <button type="button" id="btnBackToUpload" class="btn" value="Back" style="border: 1px solid #D6D6D6;" onclick="return funcBackToUpload();">Back</button>
            </div>
            <div class="span4">

            </div>

        </div>
    </div>
</div>


<div id="divWashCare" style="display:none">
    <h3 class="block" style="text-align:center;">Add Washing Instructions</h3>
    <div class="row-fluid">
        <b class="control-label" for="firstName">Commonly-used Washing Instruction :</b>
        <select class="large m-wrap" id='SelectCommCustUsed' name='SelectCommCustUsed'>
            @foreach (var item in Model.CommonUsedCareList)
            {
                <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
            }
        </select>
        <button type="button" id="btnAddCommCustUsed" class="btn btn-default" value="Add" style="border: 1px solid #D6D6D6; margin-top:-10px;" onclick="return funcAddCommCustUsedClick();">Add</button>
    </div>



    <div class="clearfix" style="margin-bottom:20px;margin-left: 13%;">
        <ul class="main_left">
            <li>
                <span style="margin-top:10px;">WASHING</span>:
                <select id='WASHING' name='SelectWashInstrPerType' style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDrop)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">BLEACHING</span>:
                <select id='BLEACHING' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropB)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">TUMBLE DRY</span>:
                <select id='TUMBLEDRY' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropT)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">HANG dry</span>:
                <select id='HANGdry' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropH)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">WRINGING</span>:
                <select id='WRINGING' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropW)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">DRY CLEANING</span>:
                <select id='DRYCLEANING' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropD)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li>
                <span style="margin-top:10px;">IRONING</span>:
                <select id='IRONING' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropI)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
            </li>
            <li style="width:600px;">
                <span style="margin-top:10px;">MISC</span>:
                <select id='MISC' name="" style="width: 220px !important;" class="selectpicker">
                    @foreach (var item in Model.DefaultCareInstrDropM)
                    {
                        <option value='@Html.DisplayFor(modelItem => item.Value)'> @Html.DisplayFor(modelItem => item.Text)</option>
                    }
                </select>
                <button type="button" id="btnAddCareStr" class="btn btn-default" value="AddCareStr" style="border: 1px solid #D6D6D6;margin-top:0;" onclick="return funcAddCareStr();">Add</button>
            </li>
        </ul>
    </div>



    <div class="portlet-body" id="Item" style="display:none;">
        <div id="Gridview" class="dataTables_wrapper form-inline" role="grid" style="width:50%;">
            <table id="LineWashCare" class="table table-striped table-bordered table-hover table-full-width dataTable" aria-describedby="sample_2_info">
                <thead>
                    <tr class="head">
                        <th class="center">Washing Instructions</th>
                        <th class="center"></th>
                    </tr>
                </thead>
                <tbody class="OrderDetail" role="alert" aria-live="polite" aria-relevant="all"></tbody>
            </table>
            <div class="row-fluid">

                <div class="span4">

                </div>

                <div class="span4">
                    <button type="button" id="btnSaveFiberAndCare" class="btn" value="Save" style="border: 1px solid #D6D6D6;" onclick="return funcSaveFiberAndCare();">Save</button>
                    <button type="button" id="btnBackToFiber" class="btn" value="Back" style="border: 1px solid #D6D6D6;" onclick="return funcBackToShowFiber();">Back</button>
                </div>
                <div class="span4">
                </div>

            </div>
        </div>
    </div>


</div>

